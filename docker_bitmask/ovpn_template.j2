# Generated by {{ script_name }}
{% set gatewayd = gateways[server_number_choice - 1] -%}
{% macro read_provider_file(fname) -%}
{%- set _path = Path(gatewayd['provider']) / fname -%}
{{ _path.read_text().rstrip() }}
{%- endmacro -%}
client
tls-client
dev tun
proto {{ gatewayd['protocols'][protocol_number_choice - 1] }}
# {{ gatewayd['host'] }} / {{ gatewayd['location']['name'] }}, {{ gatewayd['location']['country_code'] }}
remote {{ gatewayd['ip_address'] }} {{ gatewayd['ports'][port_number_choice - 1] }}
{% for k,v in openvpn_configurations[gatewayd['provider']].items() -%}
{% if v is boolean -%}
{{ k }}
{% elif k == 'tls-cipher' and v == 'DHE-RSA-AES128-SHA' -%}
{{ k }} TLS-DHE-RSA-WITH-AES-128-CBC-SHA
{% else -%}
{{ k }} {{ v }}
{% endif -%}
{% endfor -%}
resolv-retry infinite
nobind
verb 3
persist-key
persist-tun
reneg-sec 0
pull
auth-nocache
script-security 2
{#-
up /etc/openvpn/update-resolv-conf
down /etc/openvpn/update-resolv-conf
-#}
tls-version-min 1.2
redirect-gateway ipv6
remote-cert-tls server
remote-cert-eku "TLS Web Server Authentication"
verify-x509-name {{ gatewayd['host'] }}
<ca>
{{ read_provider_file(ca_cert) }}
</ca>
<cert>
{{ read_provider_file(client_cert) }}
</cert>
<key>
{{read_provider_file(client_key) }}
</key>